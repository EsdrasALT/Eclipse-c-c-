//FUNÇÕES - funcoes.c = https://codeshare.io/4YPo1d

#include "biblioteca.h"

void menuPrincipal(){
    char opcao;
    do {
        printf("\nMenu Principal:\n");
        printf("A - Inserir (cliente e placa)\n");
        printf("B - Excluir (cliente e placa)\n");
        printf("C - Relatórios\n");
        printf("D - Finalizar\n");
        printf("Escolha uma opção: ");
        scanf(" %c", &opcao);
        getchar(); // Limpar buffer

        switch(opcao) {
            case 'A':
            	menuInserir();
                break;
            case 'B':
            	menuExcluir();
                break;
            case 'C':
            	menuRelatorios();
                break;
            case 'D':
                printf("Finalizando o programa...\n");
                break;
            default:
                printf("Opção inválida!\n");
                break;
        }
    } while(opcao != 'D');
}

void menuInserir(){
    int opcao;
    printf("\nMenu Inserir:\n");
    printf("1 - Inserção de cliente\n");
    printf("2 - Inserção de placa\n");
    printf("Escolha uma opção: ");
    scanf("%d", &opcao);

    switch(opcao) {
        case 1:
          //  inserir_cliente();
            break;
        case 2:
            //inserir_placa();
            break;
        default:
            printf("Opção inválida!\n");
            break;
    }
}

void menuExcluir(){
    int opcao;
    printf("\nMenu Excluir:\n");
    printf("1 - Exclusão de cliente\n");
    printf("2 - Exclusão de placa\n");
    printf("Escolha uma opção: ");
    scanf("%d", &opcao);

    switch(opcao) {
        case 1:
            //excluir_cliente();
            break;
        case 2:
            //excluir_placa();
            break;
        default:
            printf("Opção inválida!\n");
            break;
    }
}

void menuRelatorios(){
    int opcao;
    printf("\nMenu Relatórios:\n");
    printf("1 - Listar todos os clientes cadastrados (e seus carros)\n");
    printf("2 - Listar dados do cliente por código (dados e carros)\n");
    printf("3 - Listar clientes por tipo de contrato\n");
    printf("Escolha uma opção: ");
    scanf("%d", &opcao);

    switch(opcao) {
        case 1:
            //listar_todos_clientes();
            break;
        case 2:
            //listar_cliente_por_codigo();
            break;
        case 3:
            //listar_clientes_por_contrato();
            break;
        default:
            printf("Opção inválida!\n");
            break;
    }
}

//TO-DO
//DATA DE NASCIMENTO

DataNascimento solicitarDataDeNascimento() {
	char data_str[11];
	DataNascimento data;

	int formato_incorreto = 1;
	while (formato_incorreto) {
		printf("Digite sua data de nascimento no formato MM/DD/AAAA: ");
		scanf("%10s", data_str);

		data = converterData(data_str);

		if (data.dia >= 1 && data.dia <= 31 && data.mes >= 1 && data.mes <= 12 && data.ano >= 1900 && data.ano <= 2024) {
			formato_incorreto = 0; // Saida do loop
		} else {
			printf("Formato incorreto. Por favor, insira a data no formato correto.\n");
		}
	}

	formato_incorreto =1;
	while (formato_incorreto){
		verificarIdade(data);
		if(data.ano <= 1914 && data.ano >= 2006){
			formato_incorreto = 0;
		} else {
			printf("Voce não possui mais que 18 anos.");
		}
	}

	return data;
}

DataNascimento converterData(char *data_string) {
    DataNascimento data;
    sscanf(data_string, "%d/%d/%d",
    		&data.dia, &data.mes, &data.ano);
    return data;
}

int verificarIdade(DataNascimento data_nascimento) {
    // Obter a data atual
    DataNascimento data_atual;
    // Suponha que a data atual seja 30/12/2024 para fins de exemplo
    data_atual.dia = 30;
    data_atual.mes = 12;
    data_atual.ano = 2024;

    // Calcular a idade
    int idade = data_atual.ano - data_nascimento.ano;
    if (data_atual.mes < data_nascimento.mes || (data_atual.mes == data_nascimento.mes && data_atual.dia < data_nascimento.dia)) {
        idade--; // Ainda não fez aniversário neste ano
    }

    return idade;
}

//int validarData(int dia, int mes, int ano) {
//    if (ano < 1924 || ano > 2006)
//        return 0;
//    if (mes < 1 || mes > 12)
//        return 0;
//    if (dia < 1 || dia > 31)
//        return 0;
//    if ((mes == 4 || mes == 6 || mes == 9 || mes == 11) && dia > 30)
//        return 0;
//    if (mes == 2) {
//        int bissexto = (ano % 4 == 0 && (ano % 100 != 0 || ano % 400 == 0));
//        if (dia > (bissexto ? 29 : 28))
//            return 0;
//    }
//    return 1;
//}

//TO-DO NOME
//A)função formatarNome (char *nome)
//B)Criação da Função Principal
//C)Implementação da Logica Recursiva
//D) Tratar espaço em branco
//E) Transformação de caracteres (toupper e tolower)
//F)Recursão (nome + 1)

//TO-DO
//QUANTIDADE DE PLACA
//A)Definir a constante para o numero de carros (MAX_CARROS 5)
//B)Declarar a função de cadastro de carros (void cadastrarCarros)
//C)Implementar a função

//TO-DO
//TIPO DE CONTRATO
//A) Criar a funcao verificarTipoContrato()


//TO-DO
//PLACA
//A) Criar a funcao validarPlaca(char *placa)
//B) Verificar se placa = 3 letras + 4 numeros (tamanho)
//C) Verificar 3 primeiros são letras e 4 ultimos são numeros

